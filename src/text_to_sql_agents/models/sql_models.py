from typing import Any, Dict, List, Optional
from pydantic import BaseModel


class SQLQuery(BaseModel):
    """Represents a SQL statement generated by the SQLGeneratorAgent."""
    text: str
    dialect: str = "tsql"
    confidence: Optional[float] = None


class SQLExecutionResult(BaseModel):
    """Represents the outcome of an executed SQL query."""
    success: bool
    rows: Optional[List[Dict[str, Any]]] = None
    error: Optional[str] = None
    execution_time_ms: Optional[float] = None
